all right I'm gonna be roll my sleeves up writing code all day and I was shocked to see that like most of my time was spent in user studies historically we've been designing and developing sites where you load everything in one go but doesn't seem to make much sense  one of the challenges for designers developers with P. WAC site %HESITATION will be pushing that this is a great way to make your site behave like an apple like way this was of a P. I. C. can access fight for mobile devices specially but it's really hard to do it like is that the entry barriers re hi I'm Anna five base is working on ways like to mitigate that making the berry the entry rainy like love an easy to use am our house by basting okay you said there is these like these apple like things and so you kind of thing okay well like what do people expected apps like a usually see things that are like sixty frames per second or things just feel very like instant and and like just like you tap it and it's their data updates and like with the %HESITATION fire story is this database where you just update one thing and then like almost immediately you see that other device just update and you know went to the cloud and everything and have whenever when change happens just synchronizes across all these connected devices and that is one of those things I give you this app like sort of elements that you see things change immediately that your data is sort of ubiquitous across all your devices and also with apps use expect them to just work off line yeah and you know if you install an app just you know remotest part is all there in first or you know does the same thing whenever you like  a change it will actually save it locally so when you go offline like I delta I can repeat of you and and I was really trying to find these instances where like what's something that I can build that works the same offline that it does online if I'm just do it online I see changes across like a note taking app but with the camera app and you know use the you know web you know user mediate PI built a little camera take pictures and then it seems it and you know this photo feed and the cool thing is is like I'll go on an airplane to take pictures it you know it'll keep it on the local advice and once I get over the network to start sinking and that wasn't something that like I don't have to install my own database on the server or like locally or set up you know all this talk and index TV and stuff and it's just like I just use the farmers library and I just wanna get these features out of the box and it kind of just get rolling and I get to care about building my apt and not caring about like how is offline work how does this data connection work I get to kind of focus the things that my rather be doing centers like using I mean I don't want to like one thing I'll be speaking about like Alex Russell was like tool adoption is all about ease for the developer the designer I said what what prices like the one in still made it like I minute install yeah like even though I mean and eyes are fashionable to hate PHP and what press whatever but it's designed as a tool for someone to using of the ground just to do the job they want to do without installing a hundred different libraries it was really good at that I mean I mean five base appeasing movies following us and kind of philosophy is just really simple to set up I mean from like that I've been working on for  it's just like like two weeks ago is like my fourth year on fire Mason like I in my first week there we spent the we're actually gonna launch for base hosting and we like all I did was spend all this time in user study meetings like I enjoying this company or bill and real time data base and Java script libraries and I thought like all right I'm gonna be roll my sleeves up writing code all day and I was shocked to see that like most of my time was spent in user studies and I would just sit and like that double pane style window I mean not literally they felt like that could you look at the user and they would just be struggling trying to get something set up that you knew exactly what they needed you next year like that click that button just please click that button they look at you and they're like well why do you think I can help you and so watching it like the users like not get it and not show is that it's a reflection on you and so we've been focusing from you know the very start like you can't just get up and running in five minutes it's not gonna work and so like the whole point we always saw is like we we sort of paint this picture of what we want to achieve so the beginning was that struck this Java script librarian and now we have this real time connected apps and you didn't have to set anything up and now then we evolved on to authentication and was like okay I want to be able to log in users with you know with Google email password all these different types of providers an hour on a server I also drop in Java script library and now you have that and then with hosting it was the same thing like how fast can we get that site from like not existing on the internet tune deployed with SSL on a CD and like just like by default just has a fast performance  so all those things are and just sort of like in our blood and she's always been our number one like guiding principle as like low barrier to entry get started in five minutes and just go to say like I want to I'm a web designer who's not very technical and I just wanted to get my site up like custom to mine I bow my head and I am David the shop dot com for effect and how quickly can I get that with your %HESITATION %HESITATION that custom to mine and my serve up together like %HESITATION actually own David D. A. dot S. T. as very proud that one %HESITATION and so I get so like it was very interesting if you  like it doesn't matter who your domain provider is if you %HESITATION it with Google remains is really easy %HESITATION because we you know work with them but pretty much you to plant or sow service hosting and you get you know whatever your project name is dot firebase apt dot com and that's like a sell out of the box like you know you have your green lock on medically and then we have a sort of like why do you why were you say okay %HESITATION I want to set up a custom domain and pretty much we say okay you have to put these records into your domain registry and then you click this button and we'll check to see if they exist and when they do that's it your domain names just set up that fast amazing M.  I mean there is some critical five base there and a lot of it's to do with speed because like we always push %HESITATION even at the Java script code flight and basic minimum get something %HESITATION painted on screen as quickly as possible but I free seconds and this could take that the five base %HESITATION include is quite large systems of these two conflicting things from our point of view and  what kind of it is due to solve that problem and what is five a state to well I think like the web is it's kind of like this weird point we're like we're trying to do like so much of the web like you're saying like once the more apt like well with apps they have this you they can include a fifty megabytes library that's goes through an install time and it's just like no no goes over wifi no sweat off someone's back for the web like that's unacceptable like here you can never have fifty megabytes of anything on the web and so were in this battle of how do we get more features but yet not lose this foundational principle we have of being like fast loading and so like what I've been doing is like kind of thinking about okay well what what is the first thing you have to do a load so you always need you know this like really minimal viable part of your app and select the Firestar library is you know it is a larger library because it does so much it's basically like your own little database and browser even for a database it's still how it's really small but yeah it does a lot but you don't want that side if you're like your work serving content to users you know what that library sitting in your critical path you can render it she mail on the server send that down and you just have HTML CSS and is really minimal layer of like Java script to do here like rendering and then what I found is that when you run sort of fire store in this way where it becomes an enhancement on top of that app then when it loads in real time kicks and offline kicks in and if this architecting with your app your user continues to use it and then as they continue to use it just get that enhancement to it and you don't want to say  okay my app is only available once every single asset I have is needed for you have to have those like progressive bootstrapping of your app if if you're going to combine like having features on the web and also being performed I mean are you working on the canal knock textual concept where you splitting things into into free could you explain a bit more light axes and I what I thought I was coming up on my own thing but it's kind of like if you think that you've done it you just have to go see if ideas money is the first of which he has he has a word for it so like progressive bootstrapping is sort of the way to think of it so you like the fares very minimal thing you need for your app is just HTML CSS like that will get you really far and then a having a Java script like sort of like layer on top of it whether using a framework like react react you know angular whatever that can just be an enhancement on top of the HTML and CSS and at that point you have this app that can function every time it receives data so something comes over the network the view changes or user interacts with that something in the apathy comes more dynamic and it doesn't really matter whether the data comes from the app can be fairly like agnostic of that so few architect in the way where if you just progressively load fire store into it when fire Sir is ready to be loaded these features just you know this kind of like trickle in and and the user just now all set and might see things and made on the page when they like here in real time then when they're like they go off line that date is nine cast on the device like a quite often we I mean historically we've been designing and developing sites where you load everything in one go but doesn't  seem to make much sense says what you're advocating the only calling for features as and when they need it so you're not loading the whole database if it's not required you know loading the notification bet if it's not necessary in that particular point I mean and encodes floating in some ways works really well for that you're basically saying like okay I if you did your app up into separate routes like I don't want to load my slash profile code on my home page again doesn't make sense like H. yeah I can have a performance game I just not including that when it's not needed this is more self aware you're saying I I will need fire store %HESITATION but I don't need it immediately and if including like this Java script in my rent I am my critical path is going to cause the apt to take longer to load and let's let's find a way to sort of ease it up so we kind of be progressively give the browser when it can handle so we'll start with HTML and CSS that appears and then we have our like our our Java script that enhances it so becomes very easing and so we do intend on having all these things but if something happens users not running Java script okay that's fine we still have content for them or let's say they're on a really slow connection well we did get the initial content and we also got the javascript framework but it's gonna take longer for fire circle it maybe that times out and that never loads but the app still is usable in each one of these forms and so we we aspire to get all three of these on the page but we sort of have these like escape hatches where if if was long as we get to one of these points we're gonna be okay wait okay you know there's a heart beat  there's a whistle  Hey maybe someone sees an enormous  that's actually  