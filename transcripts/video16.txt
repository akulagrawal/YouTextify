and the team at Google that has started on crown was actually we were all working Firefox when you most people what you want is the way they want more more but they never use those things and it's really hard and quite Brae thinks they know within a script stuff away  those internal talk about how from this bill and I think back to that time a it's an exposed on the browser and five folks was just was fighting and like with the developer tools will become quite prevalent and safari was was was just released I believe and %HESITATION with a sizeable the browser so how do you stop in that environment with a so much competition crumb was released in two thousand a year actually started on it in two thousand six alma and the team at Google that has started on crown was actually we were all working fire fox %HESITATION when I first joined Google beginning in two thousand five the idea was to work on making the web better when when did you guys work on making browsers better as we started out as a team working on making Firefox better year and a half into it we made the switch to actually build our own browser that was a big bank on complicated decision right because %HESITATION in we had already regarding going down a certain path right I so %HESITATION looking back I think there are a number of factors right first off we thought we could do a really good job and had to be true yeah %HESITATION but also %HESITATION you know there are a lot of things about browsers and those days that I think were created a frustrating user experience yeah %HESITATION you gotta go but going back two thousand six you know applications like gene now yeah maps in YouTube and so on these things  %HESITATION up becoming popular in other folks are building complicated web applications like this and the and your typical browser in that day she relieved email running overnight %HESITATION  your come back the next day in your browser feel pretty sluggish and bogged down because of just the weight of these applications and so way back then we we had the idea that would be really nice to split up the browser into multiple process he's right %HESITATION operating systems and counter revolution from the days of windows three point eleven to ten windows NT and so on yeah where preemptive multitasking was the thing OS nine to OS ten a could we use preemptive multitasking can we take advantage of actually multiple processes on the systems for web browsing and seem pretty pretty a pretty like at actually seem possible if you are thinking about a browser from scratch yeah I mean in terms of like the U. X. off again it's like I'm back to the beginning of light passes over the prices of that time reminds me a bit like search before giggles like such was basically portal sites and the such input fields like with my sleeves one thing I'm but then kill came alongside nine at that it's the wrong use experience with going ekran came about it was quite radically different because I remember this phrase is that content no crime yeah and Sir just making that kind of you X. decision of like you know because those will cool boss I remember you instill anything everything to affect you %HESITATION compact and is very common to find a user of internet explorer and then install multiple toolbars as much as one to apartment multiple to ours and theirs is great absurd screen shots of  yeah browsers had like five two bars and a lot of room for the content right %HESITATION so one of the things with crumbs content a crumb idea was to really remember that the whole point is people engage with the web application website the web content and brothers just might try to get away just facilitate yeah helping you use the web and so even when we design extension system we resisted the idea of having a first class where proper waited you toolbars or side bars we really didn't want %HESITATION extensions over here really him using up screen space %HESITATION  when that screens based users really want that for the contents that we design things like extension buttons that would be the primary access point try to guide things in a way that would %HESITATION preserve that notion even if you live crumb itself tried to keep it very minimalistic  you know we spend a lot of time in the early days thinking if we're gonna introduce another browser scholarly so awesome right got it and what is I mean it's got to have like the most amazing features it's got a like have a whole new take on browsers gotta be radically different you lie %HESITATION surely that would be the reason why we're doing this right yeah %HESITATION but in and we tried many different things playing tabs on the side  no fancy user jester kinds of things mouse gesture types of things I mean none of that really felt right at least into that process we came to realize what what actually we're doing what really would set from part is there's a browser supports better yeah caning software that's not frustrating is actually hard to do yeah  and I think users appreciate it and so I started to think about and what does that really mean for us it was like all products should be for  simple right should try to China's come with elegant you I choices keep it simple  it should be performed by a said browsers %HESITATION preservation of being Jenkin out well behaved and an end user has an expectation and click on something special and it's the chrome of the U. I am it's the the browser you why they click on it they say close this tablet your clothes right away you know ed  for the course those days was you click close the click to close the tab and you said you might see a beach ball on mac OS ten or eight or nothing happens on windows you start to see the application not responsive problem right but in chrome because we wanted this multi process architecture %HESITATION able to guarantee that if you click close on the tap it's gone yeah and for those examples of like responsive you I that you know sometimes we talk about performance speed we mean account of welded performing a benchmark but a lot of times it comes down to like was experience smooth responsive to the user input that it actually do what the user wanted it when the user on it that kind of thing so simplicity speed we also put a big focus on security and stability so had these FOR **** here and that was the thing that we just repeat it to ourselves if you're not sure what to work on work on one of those things work on making it simpler design work on making more performant work on making it you know more secure said and really was security wing making it so users feel safe on the web feel control of their privacy they understand what's going on %HESITATION but also that it's the system is is %HESITATION protecting you from our and so on and again our multi process architecture not only helped us make something for performance but also something worse  care browser more secure and finally it helped a lot of stability we knew that starting school scratch with a browser that might actually be the biggest concern is that gonna just crash and how do you how do you exercise and offer the browser in your testing to know that you've got it right now %HESITATION  we base the browser on not %HESITATION Firefox it with we based it on webkit which is wet at that those days that was so far two point now safari three had just come out %HESITATION and webkit safari was known to not necessarily be the most compatible with the web right on modern web standards driven by Firefox were just becoming a thing internet explorer has had a lot of quirks about it internet explorer six for now lot of quirks especially thinking about like flute yes I help with the flow model yeah box model all these things were very impactful to like how web pages are built if a developer was testing lab with internet explorer there's would be the quirks that they would go to if they're testing lot with Firefox we'd see that and the safari it was like well probably they were testing ari and so it was a big challenge in a big fear we launch chrome is it gonna just crash all the time yeah are we gonna how we gonna manage that so we Prahlada effort in in fact that same issue informs like our choice of the user agent string anybody seen the user agent string of chrome it's kind of hilarious because it mentions every every browser ever since crown came along and and that was part of navigating this whole like doesn't work a conundrum we waste %HESITATION in software development and you X. add more features because more features means more value I mean was there a push back was it was a like a fair made with taking way too much from the present you why  we certainly ugly launched in it originally crime without any extension support and even the bookmark manager went was %HESITATION was was revised quite a bit mail post the national beta things like this so we we intentionally went with a very minimal approach but we also really encourage the team to try a lot of things with the idea that knowing going into it that we would probably throw away things that are good and that was the %HESITATION %HESITATION the mantra if you well like let's just try a lot of stuff %HESITATION and and if it doesn't work it's okay we just start it's it's not the end of the world we don't have to ship everything we try I think that was really liberating really helpful because there are a lot of folks in the team at different had had interesting ideas and and it's empowering for people to try stuff it's also you know appropriate that means we have to say because we built it we should check looking back what would you say with a group of the best decisions you made and also the two part what you would you regret in terms of like %HESITATION yeah things that you did that you'd wish you hadn't I mean you because I'm an engineer as it is definitely an engineer at that is days %HESITATION and I feel really good about some of the decisions we made an engineer from an Asian focus on you know we really put a lot of  we we talked a lot about how important was that we're building a product not building a platform I mean ultimately is a product that carries web platform but what I mean by not building a platform is it sometimes there's a temptation as engineers to go off and build framework and and tools for creating the product that you're actually there to greet you and we really resist that that a lot %HESITATION tried to make sure that we focused on all as much of our energy on like actually building a browser  and she was very helpful to take to make sure that that that's what we did so for example we said first we're just building windows browser and that meant that's just use win thirty two straight away all the Microsoft API's %HESITATION not looking for any cross platform toolkit framework to build are you why yes one day will bring this to mac when they will bring it to Lennix you know and so on but like for now we're just building a windows application and when we went to finally build a mac product a product for us and we we told some engineers a Google we said Hey you wanna come work with us we'd love for you to build the best browser for us and and we want you to approach it the same way that we approach building for windows which is all the you I should be co coach all the native and we want you to have the freedom and flexibility to apple's embrace the native operating system parents but also %HESITATION move quickly as those planets change yeah there was involves a so let's build a mac focused product again with this idea that it's we're building a product on a platform for building browsers about what ends up happening is you do this and we did the same thing Lennix ones of happening as you do this is you know we start to realize we are coding same thing three times yeah I am and later on things like android came along and iOS and chrome OS and so at our world a lot more complicated and what we ended up doing is or is this arc from the singular I'm building a product to I'm starting to build platform things that help me build up product crossed and different platforms and that came afterwards and I think that was actually somewhat healthy and in a bit it to a certain extent I kind of have some regrets that we built chrome so much as a monolithic product so %HESITATION while there is some  structure that's healthy and good and and look there is somewhat of a layer cake if you well there are there are some cuts that some some extra layers indicate that should have been there %HESITATION and now we have %HESITATION a lot of complexity because we did make some of those cuts earlier within modularized necessarily as much as we should have but again I think that came from that that focus on just building this product and does not need to be extra will need all that extra modular modularity and now we find ourselves wishing we had a maybe down a little more hello more forethought on that what would you say that this is that were made that were actually really good to the success of the past SO design examples and engineering samples there is this one one concept that was came up very early which was %HESITATION and we wrestled with is a bit so %HESITATION the the content area the tab right we started with the idea that there are some we will actually have some browser you I that lives in a tab so for example when you open a new tab page there's there's some contention to suggestions about things you might want to do yeah we started out building that natively and we started to find ourselves discovering an uncanny valley  as developed users have this expectation that things inside the tab hit like web page but building that not using web technologies meant that some things are suddenly not right yeah selection behavior wasn't there context menus not there in the same you know just things were subtly different  so we scrapped and we built the new tab page using web technology and now it fit better everything we didn't have all those little niggling little bugs just felt natural it felt natural fit with the product on the flip side we had some dialogues and some of those dialogues  see they were built natively but a few of them were built using web and he never felt quite right and so then we came to this discover that like let's be opinionated about this and it's a dialogue it's done natively and if it's in the continent it's done with a tab and then we avoid this sort of %HESITATION uncanny valley situation when crime came out there was that designing for best viewed in internet explorer six am and it's interesting you say that the time  a web kit was not the priority with the benefits now we've shifted ten years later I was seen best viewed in crime old **** webkit browser right ma'am so there's this constant fear that way possibly entry back to the past where if if if if development stops then uses and like web technology becomes like %HESITATION  stagnant I answered soon great question I think that %HESITATION there's a couple different things that happen with IP six right some offers of Microsoft stock involving a guy's arm and we're not stopping involving guys we are our mission is to make the web better and so we continue to invest in that I'm in the way of investing that is it's very important to work with the standards community gather rather ventures in particular and web developers and get her right yeah %HESITATION one of the dangers of of shipping API if you're the only one on the browser shipping it is that you might come to find that there's a better way to do that it got a better design and in the end result is will be tempted to ship the new design as well to better design but we won't will have trouble leaving behind the old design now will ship two ways to do something yeah or in the worst case three ways to do something if you look at CSS gradients you'll see there's multiple ways and this comes from this this  and I'm not aware browser ships early then they learn that %HESITATION Gee I wish I'd done it differently and then he they ship it that way too and then %HESITATION Gee I wish you would do differently and they ship it that finally and so you end up with a multitude of ways to do things on the web from gets really complicated and we don't want to but developed web developer TV trash file that rate we want to keep it simple and make sure if you guys work well so we want to do our %HESITATION do a good job and that means spending time with other browser vendor spending time with web developers learning understanding all these cases and being very deliberate in the standards process but we should still be able to ship something finally and sometimes we do have to take some calculated risk yeah and sometimes we are the first browser just a penny P. I. but we hope to do that in a way that that stands the test of time  %HESITATION looking for pain points and you were trying to understand why it is that people have these problems so that you understand that mental model in you avoidable and designing in that way again  